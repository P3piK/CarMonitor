//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarMonitor.Client.ProfileServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileDto", Namespace="http://schemas.datacontract.org/2004/07/CarMonitor.Service.Dto")]
    [System.SerializableAttribute()]
    public partial class ProfileDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProfileServiceReference.IProfileService")]
    public interface IProfileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/GetProfile", ReplyAction="http://tempuri.org/IProfileService/GetProfileResponse")]
        CarMonitor.Client.ProfileServiceReference.ProfileDto GetProfile(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/GetProfile", ReplyAction="http://tempuri.org/IProfileService/GetProfileResponse")]
        System.Threading.Tasks.Task<CarMonitor.Client.ProfileServiceReference.ProfileDto> GetProfileAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/CreateProfile", ReplyAction="http://tempuri.org/IProfileService/CreateProfileResponse")]
        int CreateProfile(CarMonitor.Client.ProfileServiceReference.ProfileDto profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/CreateProfile", ReplyAction="http://tempuri.org/IProfileService/CreateProfileResponse")]
        System.Threading.Tasks.Task<int> CreateProfileAsync(CarMonitor.Client.ProfileServiceReference.ProfileDto profile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileServiceChannel : CarMonitor.Client.ProfileServiceReference.IProfileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileServiceClient : System.ServiceModel.ClientBase<CarMonitor.Client.ProfileServiceReference.IProfileService>, CarMonitor.Client.ProfileServiceReference.IProfileService {
        
        public ProfileServiceClient() {
        }
        
        public ProfileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CarMonitor.Client.ProfileServiceReference.ProfileDto GetProfile(string login) {
            return base.Channel.GetProfile(login);
        }
        
        public System.Threading.Tasks.Task<CarMonitor.Client.ProfileServiceReference.ProfileDto> GetProfileAsync(string login) {
            return base.Channel.GetProfileAsync(login);
        }
        
        public int CreateProfile(CarMonitor.Client.ProfileServiceReference.ProfileDto profile) {
            return base.Channel.CreateProfile(profile);
        }
        
        public System.Threading.Tasks.Task<int> CreateProfileAsync(CarMonitor.Client.ProfileServiceReference.ProfileDto profile) {
            return base.Channel.CreateProfileAsync(profile);
        }
    }
}
